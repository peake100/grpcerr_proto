syntax = "proto3";
package grpeakec;
option go_package = "github.com/peake100/gRPEAKEC-go/protogen";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Mock is a service for testing interceptors or other generic service utilities.
service MockUnaryService {
  // Unary takes in an Any request and returns an Any message.
  rpc Unary(google.protobuf.Any) returns (google.protobuf.Any);

  // Dummy sends an empty request and gets an empty response.
  rpc Dummy(google.protobuf.Empty) returns (google.protobuf.Empty);
}

// MockStreamService contains mock methods for testing bi-di streams.
service MockStreamService {
  // Stream streams any messages bi-directionally.
  rpc Stream(stream google.protobuf.Any) returns (stream google.protobuf.Any);

  // DummyStream streams emtpy messages bi-directionally
  rpc DummyStream(stream google.protobuf.Empty) returns (stream google.protobuf.Empty);
}

// MockStreamService contains mock methods for testing unary request with stream
// responses.
service MockUnaryStreamService {
  // UnaryStream send a unary Any request and receives an Any response stream.
  rpc UnaryStream(google.protobuf.Any) returns (stream google.protobuf.Any);

  // DummyStream streams emtpy messages bi-directionally
  rpc DummyUnaryStream(google.protobuf.Empty) returns (stream google.protobuf.Empty);
}

// MockStreamUnaryService contains mock methods for testing stream requests with unary
// responses
service MockStreamUnaryService{
  // StreamUnary streams Any messages as a request and receives a single Any response.
  rpc StreamUnary(stream google.protobuf.Any) returns (google.protobuf.Any);

  // DummyStreamUnary streams emtpy request messages and receives a single Empty
  // response.
  rpc DummyStreamUnary(stream google.protobuf.Empty) returns (google.protobuf.Empty);
}
